"""
Django settings for Joshua project.

Generated by 'django-admin startproject' using Django 1.8.

For more information on this file, see
https://docs.djangoproject.com/en/1.8/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.8/ref/settings/
"""

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
import os
import socket

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

#BASE_DIR = os.path.dirname(os.path.dirname(__file__))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.8/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '++h(u&9c$mi8%u$q@hm!f^2i9*zrc7yy2#bsvn+7-&ab-btz3p'

# SECURITY WARNING: don't run with debug turned on in production!

DEBUG = True

TEMPLATE_DEBUG = True
ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = (
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'tastypie',     
)

MIDDLEWARE_CLASSES = (
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.security.SecurityMiddleware',
)

XS_SHARING_ALLOWED_ORIGINS = '*'
XS_SHARING_ALLOWED_METHODS = ['POST','GET','OPTIONS', 'PUT', 'DELETE']

ROOT_URLCONF = 'Joshua.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [ os.path.join(BASE_DIR, 'templates'),],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'Joshua.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.8/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Internationalization
# https://docs.djangoproject.com/en/1.8/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

#following definition define what executable Joshua script should be invoke with, for example "sh" for bash shell,
# "perl" for a perl script "python" for a python script etc
JOSHUA_SCRIPT_EXECUTABLE = 'sh'


#Joshua script that will translate standard input
#JOSHUA_SCRIPT_FILENAME="/opt/joshua-v6.0.1/translate_input_with_language.sh"
#JOSHUA_SCRIPT_FILENAME="/home/ubuntu/xdata-arabic-translate-service/translate_input.sh"
JOSHUA_SCRIPT_FILENAME="/opt/joshua-web/conf/translate_input_with_language.sh"

#JOSHUA_WEB_API_URL="http://10.1.93.168/api/translation/"

# Hack to get IP Address
#s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
#s.connect(('8.8.8.8', 0))  
#local_ip_address = s.getsockname()[0]

JOSHUA_WEB_API_URL="http://0.0.0.0:8000/api/translation/"

print JOSHUA_WEB_API_URL

#languages that are supported by API
#each language is ISO 2 letter language code supported by API  and should be seperated by space. for example "en fr it ar"
JOSHUA_WEB_API_SUPPORT_LANGUAGES="ar"

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.8/howto/static-files/
STATICFILES_DIRS = ( 
    os.path.join(BASE_DIR, "static"),
    '/var/www/Joshua-web/static/',
)

STATIC_URL = '/static/'

